<?php
$allowAnnotation=false;
if ($this->userIsAllowed(\Annotate\Entity\Annotation::class, 'create')) {
  $allowAnnotation=true;
}
$allowCreate=false;
if ($this->userIsAllowed('Omeka\Entity\Resource', 'create')) {
  $allowCreate=true;
}
$isAdmin = $this->identity() && $this->identity()->getRole() == "global_admin" ? true : false;

$translate = $this->plugin('translate');
//récupère les items du séminaire
$items = $this->api()->search('items', ['item_set_id'=>7204,'sort_by'=>'dcterms:date'])->getContent();
//récupère la liste des catégories
$categories = $this->api()->search('items', ['item_set_id'=>8062,'sort_by'=>'dcterms:title'])->getContent();

$actant = [];
if ($allowCreate) $actant = $this->cartoAffect(['getActant' => true, 'user' => $this->identity()]);


?>
<div class="container-fluid h-75">
  <div class="row">
    <div class="col-4 bg-dark text-white">
      <?php echo $this->partial('edisem/nv-visios-gauche', ['isAdmin'=>$isAdmin,'allowCreate'=>$allowCreate]);?>
    </div>
    <div class="col-8 bg-secondary text-white p-2">
      <?php echo $this->partial('edisem/tb-visios', ['isAdmin'=>$isAdmin,'allowCreate'=>$allowCreate]);?>
      <div class="container">
        <div id="mediaCards" class="card-group"></div>
      </div>
    </div>
  </div>
</div>

<script>
    const itemsSem = <?php echo json_encode($items); ?>

        , itemsCat = <?php echo json_encode($categories); ?>

        , actant = <?php echo json_encode($actant); ?>

        , urlApi = '<?php echo $this->url('api', [], true); ?>'
        , urlAdmin = '<?php echo $this->url('admin', [], true); ?>'
        , urlSite = '<?php echo $this->url('site', [], true); ?>'
        , urlPosterVideo="<?php echo $this->assetUrl('images/video-poster.png'); ?>"
    ;
    window.onload = initVisios;

    function initVisios(){
        //ajoute la liste des séminaires
        showListeSeminaire();
        //ajoute la liste des catégories
        setCategoriesRadio();
    }


    //gestion des boutons
    d3.select('#btncheckTimeliner').on('click',function(e){
        if(e.currentTarget.checked)showTimeliner();
        else timeliner.hide();
    });
    d3.select('#btnIMajout').on('click',function(e){
        saveIndex();
    });
    d3.select('#btnIMmodif').on('click',function(e){
        saveIndex(true);
    });
    d3.select('#inputIMdebStop').on('click',function(e){
      d3.select('#inputIMdebPlay').style('display','inline');
      d3.select('#inputIMdebStop').style('display','none');
    });
    d3.select('#inputIMdebPlay').on('click',function(e){
      d3.select('#inputIMdebPlay').style('display','none');
      d3.select('#inputIMdebStop').style('display','inline');
    });
    d3.select('#inputIMfinPlay').on('click',function(e){
      d3.select('#inputIMfinPlay').style('display','none');
      d3.select('#inputIMfinStop').style('display','inline');
    });
    d3.select('#inputIMfinStop').on('click',function(e){
      d3.select('#inputIMfinPlay').style('display','inline');
      d3.select('#inputIMfinStop').style('display','none');
    });


    //gestion du slider debut fin
    var sliderIndexStartEnd = document.getElementById('slider-startend');
    noUiSlider.create(sliderIndexStartEnd, {
      // Create two timestamps to define a range.
      range: {
          min: 0,
          max: 100
      },
      // tooltips: [true, true],
      // Two more timestamps indicate the handle starting positions.
      start: [0, 100],
      pips: {
            mode: 'range',
            density: 3
        }
    });
    var dateValues = [
        document.getElementById('inputIMdeb'),
        document.getElementById('inputIMfin')
    ];
    sliderIndexStartEnd.noUiSlider.on('update', function (values, handle) {
        dateValues[handle].value = values[handle];
    });

  //fonction spécifiques à la page
  function saveIndex(modif){
    if(!currentSource){
      let n = new jBox('Notice', {
                content: 'Veuillez sélectionner un séminaire',
                color: 'black',
                //target: '#'+e.currentTarget.id,
                position: {y: window.innerHeight/2, x: window.innerWidth/2}
            });
      return;
    }
    if(!currentMedia){
      let n = new jBox('Notice', {
                content: 'Veuillez sélectionner un média',
                color: 'black',
                //target: '#'+e.currentTarget.id,
                position: {y: window.innerHeight/2, x: window.innerWidth/2}
            });
      return;
    }

    //récupère les données saisies
    let c, cats = document.getElementsByName('radioCat');
    for (var check of cats) {
      if (check.checked)c=check.value;
    }
    let dataIndex = {
      'dcterms:title':document.getElementById('inputIMtitre').value,
      'dcterms:description':document.getElementById('inputIMdesc').value,
      'schema:category':c,//document.getElementsByName('radioCat').value,
      'oa:start':document.getElementById('inputIMdeb').value,
      'oa:end':document.getElementById('inputIMfin').value,
      'schema:color':document.getElementById('inputIMcolor').value,
      'oa:hasSource':currentSource['o:id'],
      'oa:hasTarget':currentMedia['o:id'],
      'dcterms:creator':actant['o:id'],
    }
    if(modif)dataIndex.idIndex=document.getElementById('idIndex').value;
    //enregistre dans la base
    $.ajax({
            type: 'POST',
            dataType: 'json',
            url:urlSite+'/page/ajax?helper=Scenario&type=saveIndex&json=1',
            data: dataIndex
        }).done(function (data) {
          console.log(data);
          document.getElementById('idIndex').value=data['o:id'];
          document.getElementById('btnIMmodif').disabled=false;
        })
        .fail(function (e) {
          console.log(e);
        })
        .always(function(){
            console.log('indexation enregistrée');
        });
  }

  function showTimeliner(){
      timeliner.show('dock-bottom-sam');
      animate();
      d3.select('#btncheckTimeliner').node().checked=true;

    }

    function checkExecute(e){
      let check = true;
      if(!semSelect.length){
            let n = new jBox('Notice', {
                content: 'Veuillez sélectionner une visios',
                color: 'black',
                //target: '#'+e.currentTarget.id,
                position: {y: window.innerHeight/2, x: window.innerWidth/2}
            });
            e.currentTarget.checked = false;
            check = false;
      }
      return check;

    }

    function setCategoriesRadio(){
      let fc = d3.select('#listeIndexCategory').selectAll('div').data(itemsCat).enter()
            .append('div').attr('class','form-check');
      fc.append('input')
            .attr("class","form-check-input")
            .attr("type","radio")
            .attr("name","radioCat")
            .attr("value",c=>c['o:id'])
            .attr("checked",(c,i)=>i==0 ? true : false)
            .attr("id",c=>{
              return "radioCat"+c['o:id']
            })
            .on('click',function(e,c){
              //change lma couleur du picker
              d3.select('#inputIMcolor').node().value = c['schema:color'][0]['@value'];
            });
      fc.append('label')
            .attr("class","form-check-label")
            .attr("for",c=>"radioCat"+c['o:id'])
            .html(c=> c['o:title']);
      fc.append('span')
            .style("background-color",c=>c['schema:color'][0]['@value'])
            .style("margin-left","8px")
            .html('&nbsp;&nbsp;&nbsp;');

    }

    function showListeSeminaire(){
      let aSem = d3.select('#listeSem').selectAll('a').data(itemsSem).join()
            .append('a').attr('class','list-group-item list-group-item-action')
            .attr("aria-current","true")
            .on('click',selectSem)
            .on('mouseover',function(e,d){
              d3.select('#detailsSem'+d['o:id']).style('display','block');
            })
            .on('mouseout',function(e,d){
              if(!semSelect[d['o:id']])d3.select('#detailsSem'+d['o:id']).style('display','none');
            });

        let aSemBody = aSem.append('div').attr('class','d-flex w-100 justify-content-between');
        aSemBody.append('h5').attr('class','mb-1')
            .html(d=>{
                d.titre = d["bibo:shortTitle"][0]["@value"]+' '+d["dcterms:date"][0]["@value"];
                d.adminUrl = urlAdmin+'/item/'+d['o:id'];
                d.siteUrl = urlSite+'/item/'+d['o:id'];
                d.fctCloseDetail = closeDetail
                return d.titre;
            });

        let small = aSemBody.append('small');
        small.append('input')
              .attr('id',d=>'btncheckDetails'+d['o:id'])
              .attr('class','btn-check')
              .attr('type','checkbox')
              .on('click',function(e,d){
                if(e.currentTarget.checked)showDetail(e,d);
                else d.modal.close();
                e.stopPropagation();
            });
        small.append('label')
              .attr('for',d=>'btncheckDetails'+d['o:id'])
              .attr('class','btn btn-outline-warning')
              .html('Détails');
        aSem.append('p')
            .attr('id',d=>'detailsSem'+d['o:id'])
            .style('display','none')
            .html(d=>d['o:title']);
    }

    function closeDetail(d){
        if(d.modal){
            d.modal.close();
        }
        d3.select('#btncheckDetails'+d['o:id']).node().checked =false;
    }
    function selectSem(e,d){
        //console.log(e,d);
        currentSource=false;
        let t = d3.select(e.currentTarget);
        for (const sem in semSelect) {closeDetail(semSelect[sem]);}
        if(t.attr('class')=="list-group-item list-group-item-action active"){
          t.attr('class',"list-group-item list-group-item-action");
          delete semSelect[d['o:id']];
        }else{
          semSelect[d['o:id']] = d;
          t.attr('class',"list-group-item list-group-item-action active");
          currentSource = d;
        }
        getListeMedia();
        getListeScenario();
    }
    function getListeMedia(){
      //charges les média des items sélectionnés
      mdWait.open();
      let jsons = [];
      for (const sem in semSelect) {
        jsons.push(d3.json(urlApi+'/media?item_id='+semSelect[sem]['o:id']));
      }
      Promise.all(jsons).then(function(values) {
        showListeMedia(values);
        mdWait.close();
      });
    }
    function showListeMedia(results){
      currentMedia = false;
      d3.select("#mediaCards").selectAll("div").remove();
      let medias=[], doublons=[];
      results.forEach(ms=>{
        ms.forEach(m=>{
          if(!doublons[m['o:id']])medias.push(m);
          doublons[m['o:id']]=true;
        });
      });
      d3.select('#ddmListeMedia').selectAll('li').remove();
      d3.select('#ddmListeMedia').selectAll('li').data(medias).join().append('li').append('a')
          .attr("class","dropdown-item")
          .html((m,i)=>{
            return m['o:title'] ? m['o:title'] : i+' '+m['o:media_type'];
          })
          .on('click',showMedia);
      /*charge le premier media
      if(medias.length)showMedia(null,medias[0]);
      else visioPlayer.src(null);
      */
    }

    function getListeScenario(){
      //charges les scénarios des items sélectionnés
      mdWait.open();
      let jsons = [];
      for (const sem in semSelect) {
        jsons.push(d3.json(urlSite+'/page/ajax?helper=Scenario&type=getListeFromItem&json=1&item_id='+semSelect[sem]['o:id']));
      }
      Promise.all(jsons).then(function(values) {
        showListeScenario(values);
        mdWait.close();
      });
    }

    function showListeScenario(results){
      let scenarios=[], doublons=[];
      results.forEach(r=>{
        r.forEach(s=>{
          if(!doublons[s['o:id']])scenarios.push(s);
          doublons[s['o:id']]=true;
        });
      });

      d3.select('#ddmListeScenario').selectAll('li').remove();
      d3.select('#ddmListeScenario').selectAll('li').data(scenarios).join().append('li').append('a')
          .attr("class","dropdown-item")
          .html((s,i)=>{
            return s['o:title'];
          })
          .on('click',chargeScenario);
    }
    function chargeScenario(e,d){
      /*récupère les indexations
      plus nécessaire car tous est dans les details
      d3.json(urlSite+'/page/ajax?helper=Scenario&type=getIndexFromScenario&json=1&item_id='+scenario['o:id']).then(function(data){
        d.indexVideo = data;
        timeliner.load(scenario.details);
        showTimeliner();
      });
      */
      if(!d.details)d.details=JSON.parse(d['schema:object'][0]['@value']);
      scenario=d;
      showTimeliner();
      timeliner.load(scenario.details);

    }

    function showMedia(e,d){
        /*
        if(visioPlayer.canPlayType(d['o:media_type'])){
            visioPlayer.src({type: d['o:media_type'], src: d['o:original_url']});
            d3.select('#visios-video').attr('idMedia',d['o:id']);
            visioPlayer.ready(function() {
               visioPlayer.play();
               console.log('vidéo chargée')
            });
        }
        */
        d3.select("#mediaCards").selectAll("div").remove();
        currentMedia = d;
        createMediaCard({'idTarget':d['o:id'],'typeTarget':d['o:media_type'], 'urlTarget':d['o:original_url']});
        if(!mediaCards[d['o:id']].index.length){
          //récupère les indexations

        }else showDetails(mediaCards[d['o:id']]);


    }

function animate() {
	requestAnimationFrame(animate);

	let objects = timeliner.getObjetActions(), s;
  videoIndex.forEach(v=>v.a='d');
	for (const o in objects ){
		let oa = objects[o];
    for (const a in oa.actions){
      let p = oa.actions[a];
      s = p.s;
      switch (p.prop) {
        case 'omk_videoIndex':
          joinVideoIndex(o,p.action);
          break;
      }
    }
	}
  if(videoIndex.length)showVideoIndex(s);
}

function joinVideoIndex(id, a){
  if(videoIndex[id])videoIndex[id].a='u';
  else {
    videoIndex[id]=getDetail(id, a);
    videoIndex[id].a='c';
    //vérifie s'il faut créer le média
    if(!mediaCards[videoIndex[id].idTarget])createMediaCard(videoIndex[id]);
    mediaCards[videoIndex[id].idTarget].index.push(videoIndex[id]);
  }
}


function showVideoIndex(s){
  for (const mc in mediaCards) {
    let d = mediaCards[mc];
    if(d.ready){
      if(parseInt(d.video.currentTime())!=parseInt(s)){
        d.video.currentTime(s);
      }else{
        if(!d.video.paused())d.video.pause();
      }
    }
    //affiche les details
    showDetails(d);
  }
}


function createMediaCard(d){


  let m={};
  m.card = d3.select("#mediaCards").append("div")
      .attr('id','cardVideo'+d.idTarget)
      .attr("class", "card text-white bg-dark");

  /*carte vidéo haut annotation bas
  appendVideoToMediaCard(m, d, m.card.append('video'));
  m.body = m.card.append('div')
    .attr("class", "card-body");
  */

  //carte annotation droite vidéo gauche
  let rowCard = m.card.append('div').attr('class','row g-0');
  let colAnno = rowCard.append('div').attr('class','col-md-6');
  m.body = colAnno.append('div')
    .attr("class", "card-body");
  let colVideo = rowCard.append('div').attr('class','col-md-6');
  appendVideoToMediaCard(m, d, colVideo.append('video'));

  //construction du body
  m.body.append('h5')
    .attr("class", "card-title").html("Annotations");
  m.idListeDetails="listeDetails"+d.idTarget;
  m.listeDetails = m.body.append('div')
    .attr("class", "list-group listeDetails")
    .attr("id",d.idListeDetails);
  m.index=[];
  mediaCards[d.idTarget]=m;


}
function appendVideoToMediaCard(m, d, v){
  m.idVideo = "visiosVideo"+d.idTarget;
  v.attr("id", m.idVideo)
    .attr("class", "video-js vjs-fluid card-img-top")
    .attr("controls", "true")
    .attr("preload", "auto")
    .attr("width", "400")
    .attr("height", "300")
    .attr("poster", urlPosterVideo);
  m.ready=false;
  m.video=videojs(m.idVideo)
  m.video.src({type: d.typeTarget, src: d.urlTarget});
  m.video.ready(function() {
      let playPromise = m.video.play();
      if (playPromise !== undefined) {
        playPromise.then(_ => {
          m.ready=true;
          //met à jour les extrémité du slider
          sliderIndexStartEnd.noUiSlider.updateOptions({
              range: {
                  'min': 0,
                  'max': m.video.duration()
              }
          });

        })
        .catch(error => {
          console.log(error)
        });
      }
    });
  m.video.on('timeupdate', (e, d) => {
    //met à jour les poignées du slider
    let stopDeb = d3.select('#inputIMdebPlay').style('display')
      , stopFin = d3.select('#inputIMfinPlay').style('display');
    if(stopDeb=='none' && stopFin=='none')return;
    let ct = m.video.currentTime()
      , posis = sliderIndexStartEnd.noUiSlider.get();
    if(stopDeb!='none')posis[0]=ct;
    if(stopFin!='none')posis[1]=ct;
    sliderIndexStartEnd.noUiSlider.updateOptions({
          start: posis,
      });
   });

}
function getChildrenIds(s){
  let ids = [];
  if (s.hasChildNodes()) {
    s.childNodes.forEach(c=>ids.push(c.id));
  }
  return ids;
}
function notContainedCard(arr) {
    return function arrNotContains(e) {
        return arr.indexOf('cardVideo'+e[0]) === -1;
    };
  }

function hideDetails(ids){
  listeDetails.select('#detailIndex_'+d.idObj).style('display','none');
}

function showDetails(d){
  d.listeDetails.selectAll("a")
    .data(d.index.filter(i=>i.a=='c' || i.a=='u'))
    .join(
      enter => {
        let aSem = enter.append('a').attr('class','list-group-item list-group-item-action')
            .attr("id",d=>'detailIndex_'+d.idObj)
            .attr("aria-current","true");
        let aSemBody = aSem.append('div').attr('class','d-flex w-100 justify-content-between');
        aSemBody.append('h6').attr('class','mb-1')
            .style('color',d=>d._color)
            .html(d=>d.category);

        let small = aSemBody.append('small').html(d=>d.creator);
        aSem.append('p').html(d=>d.text);
      },
      update => update
          .style("border-color", "blue"),
      exit => exit.remove()
    );
}

function getIndex(id,key){
  return scenario.indexVideo[key].filter(i=>i["o:id"]==id)[0];
}
function getDetail(id,key){
  let l = scenario.details.layers.filter(l=>l.name==key)[0];
  return l.values.filter(v=>v.idObj==id)[0];
}




</script>
<script type="module">

import { Timeliner } from '<?php echo $this->assetUrl('js/timeliner/timeliner.js'); ?>'

var actions = {};

// initialize timeliner
timeliner = new Timeliner(actions);
timeliner.hide();

</script>
